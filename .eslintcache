[{"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\index.js":"1","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\reportWebVitals.js":"2","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\App\\index.js":"3","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Firebase\\index.js":"4","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Firebase\\context.js":"5","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Firebase\\firebase.js":"6","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\AccountPage\\index.js":"7","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Footer\\index.js":"8","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\CollaborationsPage\\index.js":"9","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\CartPage\\index.js":"10","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\ForgetPassword\\index.js":"11","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Product\\index.js":"12","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Authentification\\index.js":"13","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\ErrorPage\\index.js":"14","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Header\\index.js":"15","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Admin\\Commandes\\index.js":"16","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Home\\index.js":"17","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Admin\\Products\\index.js":"18","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\ProductsPage\\index.js":"19","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\UserSession\\index.js":"20","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Login\\index.js":"21","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\SignUp\\index.js":"22","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\LogOut\\index.js":"23"},{"size":673,"mtime":1609261886881,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":3518,"mtime":1609799650373,"results":"27","hashOfConfig":"25"},{"size":135,"mtime":1609261708396,"results":"28","hashOfConfig":"25"},{"size":115,"mtime":1609261039123,"results":"29","hashOfConfig":"25"},{"size":1548,"mtime":1609784397148,"results":"30","hashOfConfig":"25"},{"size":1645,"mtime":1609770220809,"results":"31","hashOfConfig":"25"},{"size":2424,"mtime":1609191261893,"results":"32","hashOfConfig":"25"},{"size":190,"mtime":1609190990455,"results":"33","hashOfConfig":"25"},{"size":3702,"mtime":1609799378192,"results":"34","hashOfConfig":"25"},{"size":3310,"mtime":1609774130403,"results":"35","hashOfConfig":"25"},{"size":2102,"mtime":1609798587550,"results":"36","hashOfConfig":"25"},{"size":1345,"mtime":1609774298575,"results":"37","hashOfConfig":"25"},{"size":949,"mtime":1609189674826,"results":"38","hashOfConfig":"25"},{"size":3594,"mtime":1609684768023,"results":"39","hashOfConfig":"25"},{"size":2570,"mtime":1609790046298,"results":"40","hashOfConfig":"25"},{"size":3485,"mtime":1609180579384,"results":"41","hashOfConfig":"25"},{"size":3453,"mtime":1609770891374,"results":"42","hashOfConfig":"25"},{"size":1839,"mtime":1609771481450,"results":"43","hashOfConfig":"25"},{"size":121,"mtime":1609324897015,"results":"44","hashOfConfig":"25"},{"size":4107,"mtime":1609774163040,"results":"45","hashOfConfig":"25"},{"size":7299,"mtime":1609774265616,"results":"46","hashOfConfig":"25"},{"size":394,"mtime":1609771195445,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"c2rxyc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\index.js",[],["97","98"],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\reportWebVitals.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\App\\index.js",["99"],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Firebase\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Firebase\\context.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Firebase\\firebase.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\AccountPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Footer\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\CollaborationsPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\CartPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\ForgetPassword\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Product\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Authentification\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\ErrorPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Header\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Admin\\Commandes\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Home\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Admin\\Products\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\ProductsPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\UserSession\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\Login\\index.js",["100"],"import React, { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FirebaseContext } from '../Firebase'\r\nimport './Login.scss'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const data = {\r\n        loginEmail: {\r\n            content: '',\r\n            error: false,\r\n            textError: null\r\n        },\r\n        loginPassword: {\r\n            content: '',\r\n            error: false,\r\n            textError: null\r\n        },\r\n    }\r\n    let history = useHistory()\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [loginData, setLoginData] = useState(data);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleData = e => {\r\n\r\n        let currentField = loginCondition[e.target.id];\r\n        let error = false;\r\n        let textError = null;\r\n        if (!currentField.condition(e.target.value)) {\r\n            error = true;\r\n            textError = currentField.errorMsg;\r\n        }\r\n\r\n        setLoginData({\r\n            ...loginData, [e.target.id]: {\r\n                content: e.target.value,\r\n                error,\r\n                textError\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.loginUser(loginData.loginEmail.content, loginData.loginPassword.content)\r\n        .then(user => {\r\n            setLoginData(data);\r\n            history.push('/');\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n            setLoginData(data);\r\n        })\r\n    } \r\n\r\n    let loginCondition = {\r\n        'loginEmail': {\r\n            condition: (email = loginData.loginEmail.content) => (email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/) ? true : false),\r\n            errorMsg: 'Votre email n\\'est pas valide'\r\n        },\r\n        'loginPassword': {\r\n            condition: (password = loginData.loginPassword.content) => (password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!\\.@#\\\\$%\\\\^&amp;\\\\*])(?=.{8,})/) ? true : false),\r\n            errorMsg: 'Votre mot de passe doit contenir au minimum: 1 caractère alphabétique minuscule, 1 caractère alphabétique majuscule, un chiffre, un caractère spécial et au moins 8 caractères au total'\r\n        },\r\n    }\r\n\r\n    const btnSubmit =\r\n            loginCondition.loginEmail.condition() &&\r\n            loginCondition.loginPassword.condition()\r\n            ? <button type=\"submit\" className=\"btn btn-primary\">Connexion</button>\r\n            : <button type=\"submit\" className=\"btn btn-primary disabled\" aria-disabled=\"true\" disabled>Connexion</button>\r\n\r\n    const errorMsg = error !== '' && <div className=\"alert alert-danger\" role=\"alert\">{error.message}</div>\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={'auth-form ' + (props.display && 'active-content')}>\r\n            {errorMsg}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"loginEmail\">Adresse e-mail</label>\r\n                <input type=\"email\" value={loginData.loginEmail.content} onChange={handleData} className=\"form-control\" id=\"loginEmail\" placeholder=\"jean.dupond@monmail.com\" />\r\n                {loginData.loginEmail.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{loginData.loginEmail.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"loginPassword\">Mot de passe</label>\r\n                <input type=\"password\" value={loginData.loginPassword.content} onChange={handleData} className=\"form-control\" id=\"loginPassword\" placeholder=\"*******\" />\r\n                {loginData.loginPassword.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{loginData.loginPassword.textError}</small>}\r\n            </div>\r\n            {btnSubmit}\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Pas de compte ? <span onClick={() => props.tabChoice('signUp')}>Inscrivez-vous</span></small>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\"><Link to=\"/mot-de-passe-oublie\">Mot de passe oublié</Link></small>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\SignUp\\index.js",["101"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { FirebaseContext } from '../Firebase'\r\nimport './SignUp.scss'\r\nimport UserSessionContext from '../UserSession'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst SignUp = (props) => {\r\n\r\n    //ttM5.....\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n    const userSession = useContext(UserSessionContext);\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(()=> {\r\n        if(userSession.userSession !== null){\r\n            history.push({\r\n                pathname: '/mon-compte',\r\n                state: { errorMessage: 'Vous êtes déjà connecté' }\r\n            })\r\n        }\r\n        return () => {\r\n\t\t\t\r\n\t\t}\r\n    }, [userSession, history]);\r\n\r\n    let formValues = { 'signUpLastName': {}, 'signUpFirstName': {}, 'signUpEmail': {}, 'signUpPassword': {}, 'signUpPasswordConfirm': {} };\r\n    for (const item in formValues) {\r\n        formValues[item] = {\r\n            content: '',\r\n            error: false,\r\n            textError: null\r\n        }\r\n    }\r\n\r\n    const [signUpData, setsignUpData] = useState(formValues);\r\n    const [error, setError] = useState('');\r\n\r\n    const { signUpLastName, signUpFirstName, signUpEmail, signUpPassword, signUpPasswordConfirm } = signUpData\r\n\r\n    let signUpCondition = {\r\n        'signUpLastName': {\r\n            condition: (lastName = signUpLastName.content) => lastName.length > 2,\r\n            errorMsg: 'Votre nom doit faire au minimum 3 caractères'\r\n        },\r\n        'signUpFirstName': {\r\n            condition: (firstName = signUpFirstName.content) => firstName.length > 2,\r\n            errorMsg: 'Votre prénom doit faire au minimum 3 caractères'\r\n        },\r\n        'signUpEmail': {\r\n            condition: (email = signUpEmail.content) => (email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/) ? true : false),\r\n            errorMsg: 'Votre email n\\'est pas valide'\r\n        },\r\n        'signUpPassword': {\r\n            condition: (password = signUpPassword.content) => (password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!\\.@#\\\\$%\\\\^&amp;\\\\*])(?=.{8,})/) ? true : false),\r\n            errorMsg: 'Votre mot de passe doit contenir au minimum: 1 caractère alphabétique minuscule, 1 caractère alphabétique majuscule, un chiffre, un caractère spécial et au moins 8 caractères au total'\r\n        },\r\n        'signUpPasswordConfirm': {\r\n            condition: (confirm = signUpPasswordConfirm.content) => signUpPassword.content === confirm,\r\n            errorMsg: 'Les deux mots de passe ne sont pas identiques'\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        let currentField = signUpCondition[e.target.id];\r\n        let error = false;\r\n        let textError = null;\r\n        if (!currentField.condition(e.target.value)) {\r\n            error = true;\r\n            textError = currentField.errorMsg;\r\n        }\r\n\r\n        setsignUpData({\r\n            ...signUpData, [e.target.id]: {\r\n                ...signUpData[e.target.id],\r\n                content: e.target.value,\r\n                error,\r\n                textError\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.signupUser(signUpData.signUpEmail.content, signUpData.signUpPassword.content)\r\n            .then(authUser => {\r\n                return firebase.user(authUser.user.uid).set({\r\n                    lastName: signUpLastName.content,\r\n                    firstName: signUpFirstName.content,\r\n                    email: signUpEmail.content,\r\n                    role: 'user'\r\n                })\r\n            })\r\n            .then(() => {\r\n                setsignUpData({ ...formValues })\r\n                history.push('/');\r\n            })\r\n            .catch(error => {\r\n                setError(error)\r\n                setsignUpData({ ...formValues })\r\n            })\r\n    }\r\n\r\n    const btnSubmit =\r\n            signUpCondition.signUpLastName.condition() &&\r\n            signUpCondition.signUpFirstName.condition() &&\r\n            signUpCondition.signUpEmail.condition() &&\r\n            signUpCondition.signUpPassword.condition() &&\r\n            signUpCondition.signUpPasswordConfirm.condition()\r\n            ? <button type=\"submit\" className=\"btn btn-primary\">Inscription</button>\r\n            : <button type=\"submit\" className=\"btn btn-primary disabled\" aria-disabled=\"true\" disabled>Inscription</button>\r\n\r\n\r\n    const errorMsg = error !== '' && <div className=\"alert alert-danger\" role=\"alert\">{error.message}</div>\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={'auth-form ' + (props.display && 'active-content')}>\r\n            {errorMsg}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpLastName\">Nom</label>\r\n                <input onChange={handleChange} value={signUpLastName.content} type=\"text\" className=\"form-control\" id=\"signUpLastName\" placeholder=\"Dupond\" required autoComplete=\"off\" />\r\n                {signUpData.signUpLastName.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpLastName.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpFirstName\">Prénom</label>\r\n                <input onChange={handleChange} value={signUpFirstName.content} type=\"text\" className=\"form-control\" id=\"signUpFirstName\" placeholder=\"Jean\" required autoComplete=\"off\" />\r\n                {signUpData.signUpFirstName.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpFirstName.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpEmail\">Adresse e-mail</label>\r\n                <input onChange={handleChange} value={signUpEmail.content} type=\"email\" className=\"form-control\" id=\"signUpEmail\" placeholder=\"jean.dupond@monmail.com\" required autoComplete=\"off\" />\r\n                {signUpData.signUpEmail.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpEmail.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpPassword\">Mot de passe</label>\r\n                <input onChange={handleChange} value={signUpPassword.content} type=\"text\" className=\"form-control\" id=\"signUpPassword\" placeholder=\"*******\" required />\r\n                {signUpData.signUpPassword.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpPassword.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpPasswordConfirm\">Confirmation du mot de passe</label>\r\n                <input onChange={handleChange} value={signUpPasswordConfirm.content} type=\"text\" className=\"form-control\" id=\"signUpPasswordConfirm\" placeholder=\"*******\" required />\r\n                {signUpData.signUpPasswordConfirm.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpPasswordConfirm.textError}</small>}\r\n            </div>\r\n\r\n            {btnSubmit}\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Déjà inscrit ?  <span onClick={() => props.tabChoice('login')}>Connectez-vous</span></small>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignUp;","D:\\Logiciels\\wamp64\\www\\projects\\Draft\\src\\components\\LogOut\\index.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":62,"column":7,"nodeType":"108","messageId":"109","endLine":62,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":66,"column":130,"nodeType":"112","messageId":"113","endLine":66,"endColumn":131,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"111","line":57,"column":121,"nodeType":"112","messageId":"113","endLine":57,"endColumn":122,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'obj' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["118","119"],["120","121"],"no-global-assign","no-unsafe-negation",{"messageId":"122","fix":"123","desc":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"125","fix":"129","desc":"127"},"removeEscape",{"range":"130","text":"131"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"132","text":"133"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"134","text":"131"},{"range":"135","text":"133"},[1945,1946],"",[1945,1945],"\\",[2072,2073],[2072,2072]]