[{"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\index.js":"1","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\reportWebVitals.js":"2","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\App\\index.js":"3","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Header\\index.js":"4","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Home\\index.js":"5","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Footer\\index.js":"6","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Login\\index.js":"7","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\SignUp\\index.js":"8","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\ErrorPage\\index.js":"9","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Authentification\\index.js":"10","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\ProductsPage\\index.js":"11","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\CollaborationsPage\\index.js":"12","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\CartPage\\index.js":"13","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Firebase\\index.js":"14","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Firebase\\context.js":"15","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Firebase\\firebase.js":"16","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\LogOut\\index.js":"17","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\AccountPage\\index.js":"18","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\UserSession\\index.js":"19","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\ForgetPassword\\index.js":"20","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Admin\\Products\\index.js":"21","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Admin\\Commandes\\index.js":"22","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Product\\index.js":"23"},{"size":673,"mtime":1609261886881,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":2511,"mtime":1609686448131,"results":"27","hashOfConfig":"25"},{"size":3594,"mtime":1609684768023,"results":"28","hashOfConfig":"25"},{"size":3485,"mtime":1609180579384,"results":"29","hashOfConfig":"25"},{"size":2424,"mtime":1609191261893,"results":"30","hashOfConfig":"25"},{"size":4069,"mtime":1609340648963,"results":"31","hashOfConfig":"25"},{"size":7220,"mtime":1609684526113,"results":"32","hashOfConfig":"25"},{"size":949,"mtime":1609189674826,"results":"33","hashOfConfig":"25"},{"size":1393,"mtime":1609339119421,"results":"34","hashOfConfig":"25"},{"size":1779,"mtime":1609606479044,"results":"35","hashOfConfig":"25"},{"size":190,"mtime":1609190990455,"results":"36","hashOfConfig":"25"},{"size":1333,"mtime":1609686885025,"results":"37","hashOfConfig":"25"},{"size":135,"mtime":1609261708396,"results":"38","hashOfConfig":"25"},{"size":115,"mtime":1609261039123,"results":"39","hashOfConfig":"25"},{"size":1277,"mtime":1609601297079,"results":"40","hashOfConfig":"25"},{"size":409,"mtime":1609598749856,"results":"41","hashOfConfig":"25"},{"size":1749,"mtime":1609684468350,"results":"42","hashOfConfig":"25"},{"size":121,"mtime":1609324897015,"results":"43","hashOfConfig":"25"},{"size":3276,"mtime":1609341111658,"results":"44","hashOfConfig":"25"},{"size":3393,"mtime":1609684478749,"results":"45","hashOfConfig":"25"},{"size":218,"mtime":1609600096187,"results":"46","hashOfConfig":"25"},{"size":2340,"mtime":1609686148467,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1v6hoyo",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\index.js",[],["102","103"],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\reportWebVitals.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\App\\index.js",["104"],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Header\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Home\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Footer\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Login\\index.js",["105"],"import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../Firebase'\r\nimport './Login.scss'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const data = {\r\n        loginEmail: {\r\n            content: '',\r\n            error: false,\r\n            textError: null\r\n        },\r\n        loginPassword: {\r\n            content: '',\r\n            error: false,\r\n            textError: null\r\n        },\r\n    }\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [loginData, setLoginData] = useState(data);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleData = e => {\r\n\r\n        let currentField = loginCondition[e.target.id];\r\n        let error = false;\r\n        let textError = null;\r\n        if (!currentField.condition(e.target.value)) {\r\n            error = true;\r\n            textError = currentField.errorMsg;\r\n        }\r\n\r\n        setLoginData({\r\n            ...loginData, [e.target.id]: {\r\n                content: e.target.value,\r\n                error,\r\n                textError\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.loginUser(loginData.loginEmail.content, loginData.loginPassword.content)\r\n        .then(user => {\r\n            setLoginData(data);\r\n            props.history.push('/');\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n            setLoginData(data);\r\n        })\r\n    } \r\n\r\n    let loginCondition = {\r\n        'loginEmail': {\r\n            condition: (email = loginData.loginEmail.content) => (email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/) ? true : false),\r\n            errorMsg: 'Votre email n\\'est pas valide'\r\n        },\r\n        'loginPassword': {\r\n            condition: (password = loginData.loginPassword.content) => (password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!\\.@#\\\\$%\\\\^&amp;\\\\*])(?=.{8,})/) ? true : false),\r\n            errorMsg: 'Votre mot de passe doit contenir au minimum: 1 caractère alphabétique minuscule, 1 caractère alphabétique majuscule, un chiffre, un caractère spécial et au moins 8 caractères au total'\r\n        },\r\n    }\r\n\r\n    const btnSubmit =\r\n            loginCondition.loginEmail.condition() &&\r\n            loginCondition.loginPassword.condition()\r\n            ? <button type=\"submit\" className=\"btn btn-primary\">Connexion</button>\r\n            : <button type=\"submit\" className=\"btn btn-primary disabled\" aria-disabled=\"true\" disabled>Connexion</button>\r\n\r\n    const errorMsg = error !== '' && <div className=\"alert alert-danger\" role=\"alert\">{error.message}</div>\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={'auth-form ' + (props.display && 'active-content')}>\r\n            {errorMsg}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"loginEmail\">Adresse e-mail</label>\r\n                <input type=\"email\" value={loginData.loginEmail.content} onChange={handleData} className=\"form-control\" id=\"loginEmail\" placeholder=\"jean.dupond@monmail.com\" />\r\n                {loginData.loginEmail.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{loginData.loginEmail.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"loginPassword\">Mot de passe</label>\r\n                <input type=\"password\" value={loginData.loginPassword.content} onChange={handleData} className=\"form-control\" id=\"loginPassword\" placeholder=\"*******\" />\r\n                {loginData.loginPassword.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{loginData.loginPassword.textError}</small>}\r\n            </div>\r\n            {btnSubmit}\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Pas de compte ? <span onClick={() => props.tabChoice('signUp')}>Inscrivez-vous</span></small>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\"><Link to=\"/mot-de-passe-oublie\">Mot de passe oublié</Link></small>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\SignUp\\index.js",["106","107"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { FirebaseContext } from '../Firebase'\r\nimport './SignUp.scss'\r\nimport UserSessionContext from '../UserSession'\r\n\r\n\r\nconst SignUp = (props) => {\r\n\r\n    //ttM5.....\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n    const userSession = useContext(UserSessionContext);\r\n\r\n\r\n    useEffect(()=> {\r\n        if(userSession.userSession !== null){\r\n            props.history.push({\r\n                pathname: '/mon-compte',\r\n                state: { errorMessage: 'Vous êtes déjà connecté' }\r\n            })\r\n        }\r\n        return () => {\r\n\t\t\t\r\n\t\t}\r\n    }, [userSession]);\r\n\r\n    let formValues = { 'signUpLastName': {}, 'signUpFirstName': {}, 'signUpEmail': {}, 'signUpPassword': {}, 'signUpPasswordConfirm': {} };\r\n    for (const item in formValues) {\r\n        formValues[item] = {\r\n            content: '',\r\n            error: false,\r\n            textError: null\r\n        }\r\n    }\r\n\r\n    const [signUpData, setsignUpData] = useState(formValues);\r\n    const [error, setError] = useState('');\r\n\r\n    const { signUpLastName, signUpFirstName, signUpEmail, signUpPassword, signUpPasswordConfirm } = signUpData\r\n\r\n    let signUpCondition = {\r\n        'signUpLastName': {\r\n            condition: (lastName = signUpLastName.content) => lastName.length > 2,\r\n            errorMsg: 'Votre nom doit faire au minimum 3 caractères'\r\n        },\r\n        'signUpFirstName': {\r\n            condition: (firstName = signUpFirstName.content) => firstName.length > 2,\r\n            errorMsg: 'Votre prénom doit faire au minimum 3 caractères'\r\n        },\r\n        'signUpEmail': {\r\n            condition: (email = signUpEmail.content) => (email.match(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/) ? true : false),\r\n            errorMsg: 'Votre email n\\'est pas valide'\r\n        },\r\n        'signUpPassword': {\r\n            condition: (password = signUpPassword.content) => (password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!\\.@#\\\\$%\\\\^&amp;\\\\*])(?=.{8,})/) ? true : false),\r\n            errorMsg: 'Votre mot de passe doit contenir au minimum: 1 caractère alphabétique minuscule, 1 caractère alphabétique majuscule, un chiffre, un caractère spécial et au moins 8 caractères au total'\r\n        },\r\n        'signUpPasswordConfirm': {\r\n            condition: (confirm = signUpPasswordConfirm.content) => signUpPassword.content === confirm,\r\n            errorMsg: 'Les deux mots de passe ne sont pas identiques'\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        let currentField = signUpCondition[e.target.id];\r\n        let error = false;\r\n        let textError = null;\r\n        if (!currentField.condition(e.target.value)) {\r\n            error = true;\r\n            textError = currentField.errorMsg;\r\n        }\r\n\r\n        setsignUpData({\r\n            ...signUpData, [e.target.id]: {\r\n                ...signUpData[e.target.id],\r\n                content: e.target.value,\r\n                error,\r\n                textError\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        firebase.signupUser(signUpData.signUpEmail.content, signUpData.signUpPassword.content)\r\n            .then(authUser => {\r\n                return firebase.user(authUser.user.uid).set({\r\n                    lastName: signUpLastName.content,\r\n                    firstName: signUpFirstName.content,\r\n                    email: signUpEmail.content,\r\n                    role: 'user'\r\n                })\r\n            })\r\n            .then(() => {\r\n                setsignUpData({ ...formValues })\r\n                props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                setError(error)\r\n                setsignUpData({ ...formValues })\r\n            })\r\n    }\r\n\r\n    const btnSubmit =\r\n            signUpCondition.signUpLastName.condition() &&\r\n            signUpCondition.signUpFirstName.condition() &&\r\n            signUpCondition.signUpEmail.condition() &&\r\n            signUpCondition.signUpPassword.condition() &&\r\n            signUpCondition.signUpPasswordConfirm.condition()\r\n            ? <button type=\"submit\" className=\"btn btn-primary\">Inscription</button>\r\n            : <button type=\"submit\" className=\"btn btn-primary disabled\" aria-disabled=\"true\" disabled>Inscription</button>\r\n\r\n\r\n    const errorMsg = error !== '' && <div className=\"alert alert-danger\" role=\"alert\">{error.message}</div>\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={'auth-form ' + (props.display && 'active-content')}>\r\n            {errorMsg}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpLastName\">Nom</label>\r\n                <input onChange={handleChange} value={signUpLastName.content} type=\"text\" className=\"form-control\" id=\"signUpLastName\" placeholder=\"Dupond\" required autoComplete=\"off\" />\r\n                {signUpData.signUpLastName.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpLastName.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpFirstName\">Prénom</label>\r\n                <input onChange={handleChange} value={signUpFirstName.content} type=\"text\" className=\"form-control\" id=\"signUpFirstName\" placeholder=\"Jean\" required autoComplete=\"off\" />\r\n                {signUpData.signUpFirstName.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpFirstName.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpEmail\">Adresse e-mail</label>\r\n                <input onChange={handleChange} value={signUpEmail.content} type=\"email\" className=\"form-control\" id=\"signUpEmail\" placeholder=\"jean.dupond@monmail.com\" required autoComplete=\"off\" />\r\n                {signUpData.signUpEmail.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpEmail.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpPassword\">Mot de passe</label>\r\n                <input onChange={handleChange} value={signUpPassword.content} type=\"text\" className=\"form-control\" id=\"signUpPassword\" placeholder=\"*******\" required />\r\n                {signUpData.signUpPassword.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpPassword.textError}</small>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"signUpPasswordConfirm\">Confirmation du mot de passe</label>\r\n                <input onChange={handleChange} value={signUpPasswordConfirm.content} type=\"text\" className=\"form-control\" id=\"signUpPasswordConfirm\" placeholder=\"*******\" required />\r\n                {signUpData.signUpPasswordConfirm.error && <small id=\"emailHelp\" className=\"form-text text-danger\">{signUpData.signUpPasswordConfirm.textError}</small>}\r\n            </div>\r\n\r\n            {btnSubmit}\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Déjà inscrit ?  <span onClick={() => props.tabChoice('login')}>Connectez-vous</span></small>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignUp;","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\ErrorPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Authentification\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\ProductsPage\\index.js",["108"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FirebaseContext } from '../Firebase'\r\n\r\nconst ProductsPage = (props) => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const fetchProducts = async () => {\r\n        const productsCollection = await firebase.products.get();\r\n        setProducts(\r\n            productsCollection.docs.map((doc) => {\r\n                return { ...doc.data(), id: doc.id }\r\n            })\r\n        );\r\n    };\r\n\r\n    function slugify (str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n        str = str.toLowerCase();\r\n      \r\n        var from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\r\n        var to   = \"aaaaeeeeiiiioooouuuunc------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n    \r\n        str = str.replace(/[^a-z0-9 -]/g, '')\r\n            .replace(/\\s+/g, '-')\r\n            .replace(/-+/g, '-');\r\n    \r\n        return str;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <ul>\r\n            {products.map((product) => {\r\n                return (\r\n                    <li key={product.id} className=\"mb-5\">\r\n                        <img width=\"100\" height=\"100\" src={product.image} alt={product.name} />\r\n                        <p>{product.name}</p>\r\n                        <p>{product.price} €</p>\r\n                        <Link className=\"btn btn-primary\" to={`/produits/${slugify(product.name)}`}>Voir la planche</Link>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ProductsPage;","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\CollaborationsPage\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\CartPage\\index.js",["109"],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Firebase\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Firebase\\context.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Firebase\\firebase.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\LogOut\\index.js",["110"],"import React, {useContext, useHistory } from 'react';\r\nimport { FirebaseContext } from '../Firebase'\r\n\r\nconst LogOut = (props) => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const handleClick = e => {\r\n        firebase.signoutUser()\r\n    }\r\n        \r\n \r\n    return (\r\n        <button className=\"btn btn-primary\" onClick={handleClick}>Deconnexion</button>\r\n    );\r\n}\r\n\r\nexport default LogOut;","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\AccountPage\\index.js",["111","112"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport LogOut from '../LogOut';\r\nimport UserSessionContext from '../UserSession'\r\nimport { FirebaseContext } from '../Firebase'\r\n\r\n\r\nconst AccountPage = (props) => {\r\n\r\n    const userSession = useContext(UserSessionContext);\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        if (userSession.userData === null) {\r\n            props.history.push({\r\n                pathname: '/authentification',\r\n                state: { errorMessage: 'Veuillez vous connecter pour accèder à votre compte' }\r\n            })\r\n        }\r\n\r\n    }, [userSession.userData, props.history]);\r\n\r\n\r\n    let errorMessage = null;\r\n\r\n    if (![null, undefined].includes(props.location.state)) {\r\n        errorMessage = props.location.state.errorMessage;\r\n        window.history.replaceState(null, '')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {errorMessage && <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>}\r\n            {userSession.userData !== null &&\r\n            <div className=\"card\" style={{width: \"18rem\"}}>\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{`Prénom : ${userSession.userData.firstName}`}</h6>\r\n                    <h6 className=\"card-title\">{`Nom : ${userSession.userData.lastName}`}</h6>\r\n                    <h6 className=\"card-title\">{`Mail : ${userSession.userData.email}`}</h6>\r\n                    <h6 className=\"card-title\">{`Role : ${userSession.userData.role}`}</h6>\r\n                    {userSession !== null && <LogOut history={props.history}/>}\r\n                </div>\r\n            </div>\r\n            }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountPage;","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\UserSession\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\ForgetPassword\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Admin\\Products\\index.js",["113"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { FirebaseContext } from '../../Firebase'\r\n\r\nconst AdminCommandes = (props) => {\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [fileUrl, setFileUrl] = React.useState(null);\r\n\r\n    const onFileChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        const storageRef = firebase.storage.ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n\r\n    const fetchProducts = async () => {\r\n        const productsCollection = await firebase.products.get();\r\n        setProducts(\r\n            productsCollection.docs.map((doc) => {\r\n                return {...doc.data(), id : doc.id}\r\n            })\r\n        );\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name.value;\r\n        const price = e.target.price.value;\r\n        const content = e.target.content.value;\r\n        if (!name || !fileUrl || !price || !content) {\r\n            return;\r\n        }\r\n        await firebase.products.set({\r\n            name,\r\n            image: fileUrl,\r\n            price,\r\n            content,\r\n            slug: slugify(name)\r\n        }).then(() => {\r\n            e.target.name.value = ''\r\n            e.target.price.value = null\r\n            fetchProducts();\r\n        });\r\n        \r\n    };\r\n\r\n    function slugify (str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n        str = str.toLowerCase();\r\n      \r\n        var from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\r\n        var to   = \"aaaaeeeeiiiioooouuuunc------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n    \r\n        str = str.replace(/[^a-z0-9 -]/g, '')\r\n            .replace(/\\s+/g, '-')\r\n            .replace(/-+/g, '-');\r\n    \r\n        return str;\r\n    }\r\n\r\n    function handleDelete(id){\r\n        firebase.products.delete(id).then(() => {\r\n            fetchProducts();\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"file\" onChange={onFileChange} />\r\n                <input type=\"text\" name=\"name\" placeholder=\"NAME\" />\r\n                <input type=\"number\" name=\"price\" placeholder=\"PRICE\" />\r\n                <input type=\"text\" name=\"content\" placeholder=\"CONTENT\" />\r\n                <button>Submit</button>\r\n            </form>\r\n            <ul>\r\n                {products.map((product) => {\r\n                    return (\r\n                        <li key={product.id} className=\"mb-5\">\r\n                            <img width=\"100\" height=\"100\" src={product.image} alt={product.name} />\r\n                            <p>{product.name}</p>\r\n                            <p>{product.price} €</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => handleDelete(product.id)}>Delete</button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminCommandes;","D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Admin\\Commandes\\index.js",[],"D:\\Logiciels\\wamp64\\www\\projects\\snow\\src\\components\\Product\\index.js",["114","115","116","117"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { FirebaseContext } from '../Firebase'\r\n\r\nconst Product = (props) => {\r\n\r\n    const [product, setProduct] = useState(null)\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    let { slug } = useParams();\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const fetchProduct = async () => {\r\n        firebase.db.collection(\"snow\").where(\"slug\", \"==\", slug).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    setProduct(doc.data());\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchProduct();\r\n    }, []);\r\n\r\n\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n        str = str.toLowerCase();\r\n\r\n        var from = \"àáäâèéëêìíïîòóöôùúüûñç·/_,:;\";\r\n        var to = \"aaaaeeeeiiiioooouuuunc------\";\r\n        for (var i = 0, l = from.length; i < l; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        str = str.replace(/[^a-z0-9 -]/g, '')\r\n            .replace(/\\s+/g, '-')\r\n            .replace(/-+/g, '-');\r\n\r\n        return str;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!!product &&\r\n                <div className=\"card\" style={{width: \"18rem\"}}>\r\n                    <img className=\"card-img-top\" src={product.image} alt=\"Card image cap\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{product.name}</h5>\r\n                            <p className=\"card-text\">{product.content}</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => setQuantity((quantity -1 < 0) ? 0 : quantity -1)}>-</button><span> {quantity} </span><button className=\"btn btn-primary\" onClick={() => setQuantity(quantity +1)}>+</button>\r\n                            <a href=\"#\" className=\"btn btn-primary mt-3\" onClick={() => props.handleCart({...product, quantity})}>Ajouter à mon backpack !</a>\r\n                        </div>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":44,"column":5,"nodeType":"124","endLine":44,"endColumn":20,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":65,"column":130,"nodeType":"128","messageId":"129","endLine":65,"endColumn":131,"suggestions":"130"},{"ruleId":"122","severity":1,"message":"131","line":25,"column":8,"nodeType":"124","endLine":25,"endColumn":21,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"127","line":55,"column":121,"nodeType":"128","messageId":"129","endLine":55,"endColumn":122,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"134","line":39,"column":8,"nodeType":"124","endLine":39,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":22,"column":21,"nodeType":"138","endLine":22,"endColumn":94},{"ruleId":"139","severity":1,"message":"140","line":1,"column":28,"nodeType":"141","messageId":"142","endLine":1,"endColumn":38},{"ruleId":"139","severity":1,"message":"143","line":1,"column":40,"nodeType":"141","messageId":"142","endLine":1,"endColumn":48},{"ruleId":"139","severity":1,"message":"144","line":10,"column":11,"nodeType":"141","messageId":"142","endLine":10,"endColumn":19},{"ruleId":"122","severity":1,"message":"134","line":77,"column":8,"nodeType":"124","endLine":77,"endColumn":10,"suggestions":"145"},{"ruleId":"122","severity":1,"message":"146","line":28,"column":8,"nodeType":"124","endLine":28,"endColumn":10,"suggestions":"147"},{"ruleId":"139","severity":1,"message":"148","line":31,"column":14,"nodeType":"141","messageId":"142","endLine":31,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":56,"column":21,"nodeType":"138","endLine":56,"endColumn":94},{"ruleId":"149","severity":1,"message":"150","line":61,"column":29,"nodeType":"138","endLine":61,"endColumn":131},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["154","155"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["156"],["157","158"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["159"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'firebase' is assigned a value but never used.",["160"],"React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.",["161"],"'slugify' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"messageId":"164","fix":"165","desc":"166"},{"messageId":"167","fix":"168","desc":"169"},{"desc":"170","fix":"171"},{"messageId":"164","fix":"172","desc":"166"},{"messageId":"167","fix":"173","desc":"169"},{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [firebase, firebase.auth]",{"range":"179","text":"180"},"removeEscape",{"range":"181","text":"182"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"183","text":"184"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.history, userSession]",{"range":"185","text":"186"},{"range":"187","text":"182"},{"range":"188","text":"184"},"Update the dependencies array to be: [fetchProducts]",{"range":"189","text":"190"},{"range":"191","text":"190"},"Update the dependencies array to be: [fetchProduct]",{"range":"192","text":"193"},[1367,1382],"[firebase, firebase.auth]",[1907,1908],"",[1907,1907],"\\",[632,645],"[props.history, userSession]",[1987,1988],[1987,1987],[1152,1154],"[fetchProducts]",[2306,2308],[845,847],"[fetchProduct]"]